version: '3.7'

networks:
  ${TC_NETWORK_NAME}:
    name: ${TC_NETWORK_NAME}
    external: true

# volumes:
#   prometheus_data: {}
#   grafana_storage: {}

services:
  ${TC_COMMON2_S1_NAME}:
    deploy:
      mode: replicated
      # mode: global
      replicas: 1
      placement:
        constraints: [node.role == manager]
    image: $TC_SWARM_IMG_VISUALIZER
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S1_NAME}
    ports:
      - ${TC_COMMON2_S1_PORT}:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ${TC_COMMON2_S2_NAME}:
    deploy:
      mode: replicated
      # mode: global
      replicas: 1
      placement:
        constraints: [node.role == manager]
    image: $TC_SWARM_IMG_LOGSPOUT
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S2_NAME}
    ports:
      - ${TC_COMMON2_S2_PORT}:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  ${TC_COMMON2_S3_NAME}:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    deploy:
      replicas: 1
      placement:
        constraints: [ node.hostname == ${TC_COMMON2_S3_WORKER} ]
    image: $TC_SWARM_IMG_PROMETHEUS
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S3_NAME}
    ports:
      - ${TC_COMMON2_S3_PORT}:9090
    user: "${TC_COMMON2_UID}:${TC_COMMON2_UID}"
    volumes:
      - ${TC_COMMON2_S3_DATA}/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${TC_COMMON2_S3_DATA}:/prometheus:rw
  ${TC_COMMON2_S4_NAME}:
    cap_add:
      - ALL
    deploy:
      replicas: 1
      placement:
        constraints: [ node.hostname == ${TC_COMMON2_S4_WORKER} ]
      restart_policy:
        condition: any 
        delay: ${TC_SWARM_DELAY}s
    image: $TC_SWARM_IMG_CADVISOR
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S4_NAME}
    #Â privileged: true
    ports:
      - ${TC_COMMON2_S4_PORT}:8080
    volumes:
      # - /cgroup:/cgroup:ro
      - /sys/fs/cgroup:/cgroup:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  ${TC_COMMON2_S5_NAME}:
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    deploy:
      replicas: 1
      placement:
        constraints: [ node.hostname == ${TC_COMMON2_S5_WORKER} ]
      restart_policy:
        condition: any 
        delay: ${TC_SWARM_DELAY}s
    image: $TC_SWARM_IMG_NODEEXPORTER
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S5_NAME}
    ports:
      - ${TC_COMMON2_S5_PORT}:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
  ${TC_COMMON2_S6_NAME}:
    deploy:
      replicas: 1
      placement:
        constraints: [ node.hostname == ${TC_COMMON2_S6_WORKER} ]
    image: $TC_SWARM_IMG_GRAFANA
    user: "${TC_COMMON2_UID}:${TC_COMMON2_GID}"
    networks:
      ${TC_NETWORK_NAME}:
        aliases:
          - ${TC_COMMON2_S6_NAME}
    depends_on:
      - ${TC_COMMON2_S3_NAME}
    ports:
      - ${TC_COMMON2_S6_PORT}:3000
    volumes:
      - ${TC_COMMON2_S6_DATA}:/var/lib/grafana:rw
      - ${TC_COMMON2_S6_DATA}/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ${TC_COMMON2_S6_DATA}/config.monitoring
